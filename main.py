from flask import Flask, jsonify, render_template, request
import firebase_admin
from firebase_admin import credentials, firestore
import random
import os
import json
from datetime import datetime  # ‚úÖ –¥–æ–¥–∞—î–º–æ –¥–∞—Ç—É

# –û—Ç—Ä–∏–º—É—î–º–æ JSON-–∫–ª—é—á —ñ–∑ –∑–º—ñ–Ω–Ω–æ—ó —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
firebase_key = os.environ.get("FIREBASE_KEY_JSON")

if not firebase_key:
    raise Exception("‚ùå FIREBASE_KEY_JSON –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!")

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ Firebase –∑ —Ä—è–¥–∫–∞ JSON
cred = credentials.Certificate(json.loads(firebase_key))
firebase_admin.initialize_app(cred)
db = firestore.client()

# Flask API
app = Flask(__name__, template_folder="templates")

@app.route("/")
def home():
    return render_template("index.html")

@app.route("/random-excuse", methods=["GET"])
def random_excuse():
    excuses_ref = db.collection("excuses").stream()
    excuses = [doc.to_dict() for doc in excuses_ref]
    if not excuses:
        return jsonify({"error": "–ù–µ–º–∞—î –≤—ñ–¥–º–∞–∑–æ–∫ üò¢"}), 404

    chosen = random.choice(excuses)
    client_ip = request.remote_addr or "unknown"
    log_entry = f"{datetime.now()} | {client_ip} | {chosen['text']}\n"

    # ‚úÖ –∑–∞–ø–∏—Å —É –ª–æ–≥-—Ñ–∞–π–ª
    with open("excuse-log.txt", "a", encoding="utf-8") as f:
        f.write(log_entry)

    return jsonify(chosen)

if __name__ == "__main__":
    print("üöÄ API –∑–∞–ø—É—Å–∫–∞—î—Ç—å—Å—è –Ω–∞ Railway...")
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))
