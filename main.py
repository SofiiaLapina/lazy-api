from flask import Flask, jsonify, render_template, request
import firebase_admin
from firebase_admin import credentials, firestore
import random
import os
import json
from datetime import datetime

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è: –ª–æ–∫–∞–ª—å–Ω–∏–π –∑–∞–ø—É—Å–∫ —á–∏ Railway
if os.environ.get("RAILWAY_ENVIRONMENT"):
    print("üå©Ô∏è –†–µ–∂–∏–º: Railway (production)")
    firebase_key = os.environ.get("FIREBASE_KEY_JSON")
    if not firebase_key:
        raise Exception("‚ùå FIREBASE_KEY_JSON –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ –æ—Ç–æ—á–µ–Ω–Ω—ñ!")
    cred = credentials.Certificate(json.loads(firebase_key))
else:
    print("üíª –†–µ–∂–∏–º: –ª–æ–∫–∞–ª—å–Ω–∏–π")
    with open("firebase-key.json") as f:
        firebase_key = json.load(f)
    cred = credentials.Certificate(firebase_key)

# Firebase
firebase_admin.initialize_app(cred)
db = firestore.client()

# Flask
app = Flask(__name__, template_folder="templates")

@app.route("/")
def home():
    return render_template("index.html")

@app.route("/random-excuse", methods=["GET"])
def random_excuse():
    excuses_ref = db.collection("excuses").stream()
    excuses = [doc.to_dict() for doc in excuses_ref]
    if not excuses:
        return jsonify({"error": "–ù–µ–º–∞—î –≤—ñ–¥–º–∞–∑–æ–∫ üò¢"}), 404

    chosen = random.choice(excuses)
    client_ip = request.remote_addr or "unknown"
    log_entry = f"{datetime.now()} | {client_ip} | {chosen['text']}\n"

    with open("excuse-log.txt", "a", encoding="utf-8") as f:
        f.write(log_entry)

    return jsonify(chosen)

# –º–∞—Ä—à—Ä—É—Ç –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É –ª–æ–≥—ñ–≤
@app.route("/logs", methods=["GET"])
def show_logs():
    try:
        with open("excuse-log.txt", "r", encoding="utf-8") as f:
            content = f.read()
        return f"<pre>{content}</pre>"
    except FileNotFoundError:
        return "–§–∞–π–ª –ª–æ–≥—ñ–≤ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –©–µ –Ω–µ –±—É–ª–æ –∑–∞–ø–∏—Ç—ñ–≤ –∞–±–æ —Ñ–∞–π–ª –Ω–µ —Å—Ç–≤–æ—Ä–µ–Ω–æ."

if __name__ == "__main__":
    print("üöÄ API –∑–∞–ø—É—Å–∫–∞—î—Ç—å—Å—è –ª–æ–∫–∞–ª—å–Ω–æ...")
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))
